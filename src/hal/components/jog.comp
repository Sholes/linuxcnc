/**
 * Reference: Comp HAL Component Generator
 * http://linuxcnc.org/docs/html/hal/comp.html
 **/

component jog "control MPG and CONT jogging";

pin in  bit     mpg-scale-sel.#[2]      "array of mpg-scale-sel signals";
pin in  bit     mpg-joint-sel.#[3]      "array of mpg-joint-sel signals";
pin in  bit     wheel-jog-active.#[6]   "array of wheel-jog-active signals";

pin out  s32    jog-vel-scale           "jog-vel-scale for shifting mpg-vel left/right";
pin out  u32    jog-sel                 "bitwise jog select signal";
pin out  bit    wheel-jog-enable.#[6]   "array of wheel-jog-enable signals for handle_jogwheels()";

param rw  u32   master-gantry-id        "";
param rw  u32   slave-gantry-id         "";
param rw  s32   jog-scale.#[3]          "jog-vel-scale options for shifting mpg-vel left/right";
                                        /* positive : shift left  *
                                         * negative : shift right */

license "GPL";

function _;

;;

#include <stdio.h>
#include <assert.h>
#include <rtapi_math.h>
#include <posemath.h>

FUNCTION(_)
{
    int mpg_joint_code;
    int i;

    jog_sel = (wheel_jog_active(5) << 5) |
              (wheel_jog_active(4) << 4) |
              (wheel_jog_active(3) << 3) |
              (wheel_jog_active(2) << 2) |
              (wheel_jog_active(1) << 1) |
              (wheel_jog_active(0));   // MPG.AXIS.SEL: JOG_DISABLE(0), JOG_X(1), JOG_Y(2)...
    if (jog_sel> 0)
    {
        jog_sel |= (1 << 7);            // set jog_sel[7] for MPG jogging
    }

    mpg_joint_code = ((mpg_joint_sel(2) << 2) |
                      (mpg_joint_sel(1) << 1) |
                      (mpg_joint_sel(0)));   // MPG.AXIS.SEL: JOG_DISABLE(0), JOG_X(1), JOG_Y(2)...
    for(i=0; i<6; i++)
    {
        wheel_jog_enable(i) = 0;
    }

    if (mpg_joint_code > 0)
    {
        // wheel_jog_enable(mpg_joint_code) = 1;
        if (mpg_joint_code == 1) {
            // X
            wheel_jog_enable(0) = 1;
        } else if (mpg_joint_code == 2) {
            // Y => gantry
            wheel_jog_enable(master_gantry_id) = 1;
            wheel_jog_enable(slave_gantry_id) = 1;
        } else if (mpg_joint_code == 3) {
            // Z 
            wheel_jog_enable(3) = 1;
        } else if (mpg_joint_code == 4) {
            // W 
            wheel_jog_enable(4) = 1;
        }
    }

    if (mpg_scale_sel(1))
    {   // 2'b1x
        jog_vel_scale = jog_scale(2);
    }
    else
    {
        if (mpg_scale_sel(0))
        {   // 2'b01
            jog_vel_scale = jog_scale(1);
        }
        else
        {   // 2'b00
            jog_vel_scale = jog_scale(0);
        }
    }
}
